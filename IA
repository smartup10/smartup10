from IPython.display import clear_output
from PIL import ImageGrab, ImageOps
import pyautogui
import time
import numpy as np
import threading

def check_and_perform_action(image, vermelho, azul):
    data = image.load()

    for i in range(700, 705):
        for j in range(200, 750):
            if data[i, j] == (255, 0, 0) and vermelho[-1] == 0:
                clear_output()
                print('vermelho')
                vermelho.append(1)
                azul.append(0)

                pyautogui.moveTo(x=900, y=700)
                pyautogui.click(x=900, y=700)
                time.sleep(1)
                pyautogui.hotkey('ctrl', 'z')
                pyautogui.hotkey('ctrl', 'v')

            if data[i, j] == (0, 0, 255) and azul[-1] == 0:
                clear_output()
                print('azul')
                azul.append(1)
                vermelho.append(0)

                pyautogui.moveTo(x=900, y=700)
                pyautogui.click(x=900, y=700)
                time.sleep(1)

                pyautogui.hotkey('ctrl', 'z')
                pyautogui.hotkey('ctrl', 'c')

def main():
    vermelho = [0]
    azul = [0]

    while True:
        image = ImageGrab.grab()
        check_and_perform_action(image, vermelho, azul)
        time.sleep(1)

    while True:
        pyautogui.hotkey('ctrl', 'z')
        time.sleep(3)
        pyautogui.hotkey('ctrl', 'c')
        pyautogui.hotkey('ctrl', 'z')
        time.sleep(3)
        pyautogui.hotkey('ctrl', 'v')

    time.sleep(3)
    pyautogui.click(x=900, y=700)

    time.sleep(2)
    image = ImageGrab.grab()
    data = image.load()
    while True:
        for i in range(700, 705):
            for j in range(200, 750):
                print(data[i, j])

                data[i, j] = (0, 0, 0, 0)
        image.show()
        break

if __name__ == "__main__":
    main()
